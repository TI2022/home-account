name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  ci:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript type check
      run: npx tsc --noEmit
    
    - name: ESLint check
      run: npm run lint
    
    - name: Run tests
      run: npm run test:run
    
    - name: Build application
      run: npm run build
    
    - name: Build Storybook
      run: npm run build-storybook
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          dist/
          storybook-static/
        retention-days: 7
    
    - name: Test coverage
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
    
    - name: Comment PR with CI results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('ðŸš€ CI Pipeline Results')
          );
          
          const ciResults = `ðŸš€ **CI Pipeline Results**
          
          âœ… **TypeScript**: Passed
          âœ… **ESLint**: Passed  
          âœ… **Unit Tests**: Passed
          âœ… **Build**: Success
          âœ… **Storybook Build**: Success
          âœ… **Test Coverage**: Generated
          
          ðŸ“¦ **Build Artifacts**: Available for download
          ðŸ“Š **Coverage Report**: [View Details](${{ env.CODECOV_URL || 'N/A' }})
          
          ---
          *This comment was automatically generated by GitHub Actions*`;
          
          if (botComment) {
            await github.rest.issues.updateComment({
              comment_id: botComment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ciResults
            });
          } else {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ciResults
            });
          } 